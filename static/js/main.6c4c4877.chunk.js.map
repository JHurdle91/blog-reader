{"version":3,"sources":["services/auth.service.js","services/user.service.js","components/PostListItem.js","components/PostList.js","App.js","components/Navbar.js","components/PostForm.js","components/PostFormButtons.js","components/PostCreate.js","components/Comment.js","components/Comments.js","components/CommentForm.js","components/PostDetail.js","components/PostUpdate.js","components/Login.js","components/Register.js","components/Profile.js","Routes.js","index.js"],"names":["API_AUTH_URL","process","AuthService","register","username","password","axios","post","login","then","response","data","token","localStorage","setItem","JSON","stringify","logout","removeItem","getCurrentUser","parse","getItem","user","API_URL","UserService","getPosts","get","getPost","id","createPost","userId","title","body","published","params","updatePost","postId","deletePost","getComments","deleteComment","commentId","postComment","text","togglePublished","PostListItem","props","useState","comments","setComments","admin","setAdmin","setPublished","timestamp_formatted","_id","useEffect","result","roles","map","role","push","name","includes","truncated_text","length","substring","className","onClick","window","location","href","onChange","checked","PostList","posts","setPosts","key","uniqid","App","Navbar","undefined","currentUser","setCurrentUser","to","PostCreateForm","htmlFor","e","preventDefault","onChangeTitle","target","value","placeholder","required","onChangeBody","type","PostFormButtons","onClickCancel","onClickSave","onClickSaveAndPublish","PostCreate","setTitle","setBody","createPostAndRedirect","alert","PostForm","Comment","timestamp","commentAuthor","reloadComments","useParams","Comments","comment","CommentForm","setText","handleSubmit","onSubmit","onKeyPress","which","PostDetail","setPost","useCallback","PostUpdate","updatePostAndRedirect","Login","form","useRef","checkBtn","setUsername","setPassword","loading","setLoading","message","setMessage","src","alt","current","validateAll","context","_errors","history","reload","error","resMessage","toString","ref","validations","disabled","style","display","vusername","vpassword","Register","successful","setSuccessful","Profile","substr","index","Routes","exact","path","component","document","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c4c4877.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_AUTH_URL = `${process.env.REACT_APP_API_URL}/auth`;\n\nconst register = (username, password) => {\n  return axios.post(`${API_AUTH_URL}/signup`, {\n    username,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(`${API_AUTH_URL}/signin`, {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  const response = JSON.parse(localStorage.getItem(\"user\"));\n  if (response) {\n    const user = response.user;\n    user.token = response.token;\n    return user;\n  }\n  return response;\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\n\nexport default AuthService;\n","import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst getPosts = () => {\n  return axios.get(`${API_URL}/posts`);\n};\n\nconst getPost = (id) => {\n  return axios.get(`${API_URL}/posts/${id}`);\n};\n\nconst createPost = (userId, title, body, published) => {\n  return axios.post(`${API_URL}/posts/create`, {\n    params: {\n      userId,\n      title,\n      body,\n      published,\n    },\n  });\n};\n\nconst updatePost = (postId, title, body, published) => {\n  return axios.post(`${API_URL}/posts/${postId}/update`, {\n    params: {\n      title,\n      body,\n      published,\n    },\n  });\n};\n\nconst deletePost = (id) => {\n  return axios.post(`${API_URL}/posts/${id}/delete`);\n};\n\nconst getComments = (postId) => {\n  return axios.get(`${API_URL}/posts/${postId}/comments`);\n};\n\nconst postComment = (postId, userId, text) => {\n  return axios.post(`${API_URL}/posts/${postId}/comments/create`, {\n    params: {\n      postId,\n      userId,\n      text,\n    },\n  });\n};\n\nconst deleteComment = (postId, commentId) => {\n  return axios.post(`${API_URL}/posts/${postId}/comments/${commentId}/delete`);\n};\n\nconst togglePublished = (postId) => {\n  return axios.post(`${API_URL}/posts/${postId}/published`);\n};\n\nconst UserService = {\n  getPosts,\n  getPost,\n  createPost,\n  updatePost,\n  deletePost,\n  getComments,\n  deleteComment,\n  postComment,\n  togglePublished,\n};\n\nexport default UserService;\n","import React, { useState, useEffect } from \"react\";\nimport Switch from \"react-switch\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nconst PostListItem = (props) => {\n  const [comments, setComments] = useState([]);\n  const [admin, setAdmin] = useState(false);\n\n  const { post } = props;\n  const [published, setPublished] = useState(post.published);\n  const { title, timestamp_formatted, text, _id } = post;\n\n  useEffect(() => {\n    UserService.getComments(_id).then((result) => {\n      setComments(result.data);\n\n      const user = AuthService.getCurrentUser();\n      if (user) {\n        const roles = [];\n        user.roles.map((role) => roles.push(role.name));\n        setAdmin(roles.includes(\"ROLE_ADMIN\"));\n      }\n    });\n  }, [_id]);\n\n  const handleClick = () => {\n    window.location.href = `/posts/${_id}`;\n  };\n\n  const handleChange = () => {\n    UserService.togglePublished(_id);\n    setPublished(!published);\n  };\n\n  const CHAR_LIMIT = 100;\n  const truncated_text =\n    text.length >= CHAR_LIMIT ? text.substring(0, CHAR_LIMIT) + \"...\" : text;\n\n  return (\n    <div className=\"PostListItem\">\n      <div onClick={handleClick}>\n        <h2>{title}</h2>\n        <div>{timestamp_formatted}</div>\n        <p>{truncated_text}</p>\n        {comments.length === 1 ? (\n          <div>1 comment</div>\n        ) : (\n          <div>{comments.length} comments</div>\n        )}\n      </div>\n      {admin ? (\n        <label>\n          <Switch onChange={handleChange} checked={published} />\n          <br />\n          <span>{published ? \"Published\" : \"Unpublished\"}</span>\n        </label>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default PostListItem;\n","import uniqid from \"uniqid\";\n\nimport React, { useState, useEffect } from \"react\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport PostListItem from \"./PostListItem\";\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [admin, setAdmin] = useState(false);\n\n  useEffect(() => {\n    UserService.getPosts().then((response) => {\n      setPosts(response.data);\n    });\n\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      const roles = [];\n      user.roles.map((role) => roles.push(role.name));\n      setAdmin(roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n\n  const handleClick = () => {\n    window.location.href = \"/posts/create\";\n  };\n\n  return (\n    <div className=\"PostList\">\n      {admin && (\n        <div>\n          <button className=\"btn btn-primary\" onClick={handleClick}>\n            + New Post\n          </button>\n          <br />\n          <br />\n        </div>\n      )}\n      {posts.map((post) => {\n        if (post.published || admin) {\n          return (\n            <div key={uniqid()}>\n              <PostListItem post={post} />\n              <hr />\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\n\nimport PostList from \"./components/PostList\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst Navbar = () => {\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      const roles = [];\n      user.roles.map((role) => roles.push(role.name));\n      setCurrentUser(user);\n    }\n  }, []);\n\n  const logOut = () => {\n    AuthService.logout();\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/\"} className=\"navbar-brand\">\n          My Blog\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n        </div>\n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                Profile\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                Log Out\n              </a>\n            </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/login\"} className=\"nav-link\">\n                Log In\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/register\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n          </div>\n        )}\n      </nav>\n\n      <div className=\"container mt-3\"></div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst PostCreateForm = (props) => {\n  const handleChangeTitle = (e) => {\n    e.preventDefault();\n    props.onChangeTitle(e.target.value);\n  };\n\n  const handleChangeBody = (e) => {\n    e.preventDefault();\n    props.onChangeBody(e.target.value);\n  };\n\n  return (\n    <div className=\"PostCreateForm\">\n      <form>\n        <div className=\"form-group\">\n          <label htmlFor=\"titleInput\">Title:</label>\n          <input\n            id=\"titleInput\"\n            name=\"titleInput\"\n            onChange={handleChangeTitle}\n            className=\"form-control\"\n            placeholder=\"Title\"\n            value={props.title}\n            required\n          />\n          <label htmlFor=\"bodyInput\">Post Body:</label>\n          <textarea\n            id=\"commentBox\"\n            name=\"commentBox\"\n            onChange={handleChangeBody}\n            className=\"form-control\"\n            type=\"textarea\"\n            placeholder=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n            value={props.body}\n            required\n          ></textarea>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PostCreateForm;\n","import React from \"react\";\n\nconst PostFormButtons = (props) => {\n  const handleClickCancel = (e) => {\n    e.preventDefault();\n    props.onClickCancel();\n  };\n\n  const handleClickSave = (e) => {\n    e.preventDefault();\n    props.onClickSave();\n  };\n\n  const handleClickSaveAndPublish = (e) => {\n    e.preventDefault();\n    props.onClickSaveAndPublish();\n  };\n\n  return (\n    <div className=\"PostFormButtons\">\n      <button className=\"btn btn-danger\" onClick={handleClickCancel}>\n        Cancel\n      </button>\n      <br />\n      <button className=\"btn btn-primary\" onClick={handleClickSave}>\n        Save Post (Unpublished)\n      </button>\n      <br />\n      <button className=\"btn btn-primary\" onClick={handleClickSaveAndPublish}>\n        Save and Publish Post\n      </button>\n    </div>\n  );\n};\n\nexport default PostFormButtons;\n","import React, { useState, useEffect } from \"react\";\n\nimport PostForm from \"./PostForm\";\nimport PostFormButtons from \"./PostFormButtons\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nconst PostCreate = () => {\n  const [admin, setAdmin] = useState(false);\n  const [currentUser, setCurrentUser] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      const roles = [];\n      user.roles.map((role) => roles.push(role.name));\n      setAdmin(roles.includes(\"ROLE_ADMIN\"));\n      setCurrentUser(user);\n    }\n  }, []);\n\n  const handleChangeTitle = (value) => {\n    setTitle(value);\n  };\n\n  const handleChangeBody = (value) => {\n    setBody(value);\n  };\n\n  const handleClickCancel = (e) => {\n    window.location.href = `/posts/`;\n  };\n\n  const handleClickSave = () => {\n    const published = false;\n    createPostAndRedirect(published);\n  };\n\n  const handleClickSaveAndPublish = () => {\n    const published = true;\n    createPostAndRedirect(published);\n  };\n\n  const createPostAndRedirect = (published) => {\n    if (title && body) {\n      UserService.createPost(currentUser._id, title, body, published).then(\n        (response) => {\n          const postId = response.data._id;\n          window.location.href = `/posts/${postId}`;\n        }\n      );\n    } else {\n      alert(\"Title and Body are required.\");\n    }\n  };\n\n  return (\n    <div className=\"PostCreate\">\n      <h1>New Post</h1>\n      <hr />\n      {admin ? (\n        <div>\n          <PostForm\n            onChangeTitle={handleChangeTitle}\n            onChangeBody={handleChangeBody}\n          />\n          <br />\n          <PostFormButtons\n            onClickCancel={handleClickCancel}\n            onClickSave={handleClickSave}\n            onClickSaveAndPublish={handleClickSaveAndPublish}\n          />\n        </div>\n      ) : (\n        <div>Only the Admin can create new posts at this time...</div>\n      )}\n    </div>\n  );\n};\n\nexport default PostCreate;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport UserService from \"../services/user.service\";\n\nconst Comment = (props) => {\n  const { timestamp, text, commentAuthor, currentUser, admin, reloadComments } =\n    props;\n  const commentId = props.id;\n  const { postId } = useParams();\n\n  const handleClick = () => {\n    UserService.deleteComment(postId, commentId).then(() => {\n      reloadComments();\n    });\n  };\n\n  return (\n    <div className=\"Comment\">\n      <div>\n        <strong>{commentAuthor.username}</strong>\n      </div>\n      <div>{timestamp}</div>\n      <br />\n      <div>{text}</div>\n      {currentUser && (currentUser._id === commentAuthor._id || admin) ? (\n        <button className=\"btn btn-danger\" onClick={handleClick}>\n          Delete Comment\n        </button>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\nimport uniqid from \"uniqid\";\n\nimport Comment from \"./Comment\";\n\nconst Comments = (props) => {\n  const { comments, reloadComments } = props;\n\n  return (\n    <div className=\"Comments\">\n      {comments.map((comment) => {\n        const { timestamp_formatted, text, user, _id } = comment;\n        const { currentUser, admin } = props;\n        return (\n          <div key={uniqid()}>\n            <Comment\n              id={_id}\n              timestamp={timestamp_formatted}\n              text={text}\n              commentAuthor={user}\n              currentUser={currentUser}\n              admin={admin}\n              reloadComments={reloadComments}\n            />\n            <hr />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Comments;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nconst CommentForm = (props) => {\n  const [text, setText] = useState(\"\");\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  const { postId } = useParams();\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) setCurrentUser(user);\n  }, []);\n\n  const onChangeText = (e) => {\n    const text = e.target.value;\n    setText(text);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    UserService.postComment(postId, currentUser.id, text).then(() => {\n      props.reloadComments();\n      setText(\"\");\n    });\n  };\n\n  const handleKeyPress = (e) => {\n    // trigger by pressing \"enter\"\n    if (e.which === 13) {\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <div className=\"CommentForm\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"commentBox\">Leave a comment:</label>\n          <br />\n          <textarea\n            id=\"commentBox\"\n            name=\"commentBox\"\n            onChange={onChangeText}\n            className=\"form-control\"\n            type=\"textarea\"\n            placeholder=\"What an excellent post!\"\n            value={text}\n            onKeyPress={handleKeyPress}\n            required\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary\" type=\"submit\">\n          Submit\n        </button>\n        <br />\n        <br />\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Switch from \"react-switch\";\n\nimport Comments from \"./Comments\";\nimport CommentForm from \"./CommentForm\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nconst PostDetail = () => {\n  const [admin, setAdmin] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [post, setPost] = useState({\n    title: \"\",\n    timestamp: \"\",\n    timestamp_formatted: \"\",\n    text: \"\",\n    published: false,\n    user: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  const { postId } = useParams();\n\n  useEffect(() => {\n    UserService.getPost(postId).then((response) => {\n      setPost(response.data);\n    });\n\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      const roles = [];\n      user.roles.map((role) => roles.push(role.name));\n      setAdmin(roles.includes(\"ROLE_ADMIN\"));\n      setCurrentUser(user);\n    }\n  }, [postId]);\n\n  const [published, setPublished] = useState(post.published);\n  useEffect(() => {\n    setPublished(post.published);\n  }, [post.published]);\n\n  const [comments, setComments] = useState([]);\n  const reloadComments = useCallback(() => {\n    UserService.getComments(postId).then((response) => {\n      setComments(response.data);\n    });\n  }, [postId]);\n\n  useEffect(() => {\n    reloadComments();\n  }, [reloadComments]);\n\n  const handleChange = () => {\n    UserService.togglePublished(postId);\n    setPublished(!published);\n  };\n\n  const handleClickEdit = () => {\n    window.location.href = `/posts/${postId}/edit`;\n  };\n\n  const handleClickDelete = () => {\n    UserService.deletePost(postId).then(() => {\n      window.location.href = `/posts/`;\n    });\n  };\n\n  let { title, timestamp_formatted, text, user } = post;\n\n  return (\n    <div className=\"PostDetail\">\n      <h1>{title}</h1>\n      <div>- {user.username}</div>\n      <div>{timestamp_formatted}</div>\n      {admin ? (\n        <div>\n          <label>\n            <Switch onChange={handleChange} checked={published} />\n            <br />\n            <span>{published ? \"Published\" : \"Unpublished\"}</span>\n          </label>\n          <br />\n          <button className=\"btn btn-warning\" onClick={handleClickEdit}>\n            Edit Post\n          </button>\n          <br />\n          <button className=\"btn btn-danger\" onClick={handleClickDelete}>\n            Delete Post\n          </button>\n        </div>\n      ) : (\n        <div></div>\n      )}\n      <hr />\n      <div>{text}</div>\n      <hr />\n      <h2>Comments</h2>\n      {currentUser ? (\n        <CommentForm reloadComments={reloadComments} />\n      ) : (\n        <div>\n          <br />\n          <Link to={\"/login\"}>\n            <strong>Log in</strong>\n          </Link>{\" \"}\n          to leave a comment.\n          <br />\n          <br />\n        </div>\n      )}\n      <Comments\n        currentUser={currentUser}\n        admin={admin}\n        comments={comments}\n        reloadComments={reloadComments}\n      />\n    </div>\n  );\n};\n\nexport default PostDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PostForm from \"./PostForm\";\nimport PostFormButtons from \"./PostFormButtons\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nconst PostUpdate = () => {\n  const [admin, setAdmin] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [post, setPost] = useState({\n    title: \"\",\n    timestamp: \"\",\n    timestamp_formatted: \"\",\n    text: \"\",\n    published: false,\n    user: {\n      username: \"\",\n      password: \"\",\n    },\n  });\n\n  const { postId } = useParams();\n\n  useEffect(() => {\n    UserService.getPost(postId).then((response) => {\n      setPost(response.data);\n    });\n  }, [postId]);\n\n  useEffect(() => {\n    setTitle(post.title);\n    setBody(post.text);\n  }, [post]);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      const roles = [];\n      user.roles.map((role) => roles.push(role.name));\n      setAdmin(roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n\n  const handleChangeTitle = (value) => {\n    setTitle(value);\n  };\n\n  const handleChangeBody = (value) => {\n    setBody(value);\n  };\n\n  const handleClickCancel = () => {\n    window.location.href = `/posts/${postId}`;\n  };\n\n  const handleClickSave = () => {\n    const published = false;\n    updatePostAndRedirect(published);\n  };\n\n  const handleClickSaveAndPublish = () => {\n    const published = true;\n    updatePostAndRedirect(published);\n  };\n\n  const updatePostAndRedirect = (published) => {\n    if (title && body) {\n      UserService.updatePost(postId, title, body, published).then(() => {\n        window.location.href = `/posts/${postId}`;\n      });\n    } else {\n      alert(\"Title and Body are required.\");\n    }\n  };\n\n  return (\n    <div className=\"PostUpdate\">\n      <h1>Update Post</h1>\n      <hr />\n      {admin ? (\n        <div>\n          <PostForm\n            title={title}\n            body={body}\n            onChangeTitle={handleChangeTitle}\n            onChangeBody={handleChangeBody}\n          />\n          <br />\n          <PostFormButtons\n            onClickCancel={handleClickCancel}\n            onClickSave={handleClickSave}\n            onClickSaveAndPublish={handleClickSaveAndPublish}\n          />\n        </div>\n      ) : (\n        <div>Only the Admin can update posts at this time...</div>\n      )}\n    </div>\n  );\n};\n\nexport default PostUpdate;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(username, password).then(\n        () => {\n          props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.register(username, password).then(\n        (response) => {\n          setMessage(response.data.message);\n          setSuccessful(true);\n          AuthService.login(username, password).then(() => {\n            props.history.push(\"/profile\");\n            window.location.reload();\n          });\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          setMessage(resMessage);\n          setLoading(false);\n          setSuccessful(false);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button\n                  className=\"btn btn-primary btn-block\"\n                  disabled={loading}\n                >\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Sign Up</span>\n                </button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\n                }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nconst Profile = () => {\n  const currentUser = AuthService.getCurrentUser();\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          <strong>{currentUser.username}</strong> Profile\n        </h3>\n      </header>\n      <p>\n        <strong>Token:</strong> {currentUser.token.substring(0, 20)} ...{\" \"}\n        {currentUser.token.substr(currentUser.token.length - 20)}\n      </p>\n      <p>\n        <strong>Id:</strong> {currentUser.id}\n      </p>\n      <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => (\n            <li key={index}>{role.name}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport Navbar from \"./components/Navbar\";\nimport PostCreate from \"./components/PostCreate\";\nimport PostDetail from \"./components/PostDetail\";\nimport PostUpdate from \"./components/PostUpdate\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Profile from \"./components/Profile\";\n\nconst Routes = () => {\n  const posts = \"/posts\";\n  const login = \"/login\";\n  const register = \"/register\";\n  const profile = \"/profile\";\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path={[\"/\", \"/home\"]} component={App} />\n        <Route exact path={posts} component={App} />\n        <Route path={`${posts}/create`} component={PostCreate} />\n        <Route path={`${posts}/:postId/edit`} component={PostUpdate} />\n        <Route path={`${posts}/:postId`} component={PostDetail} />\n        <Route exact path={login} component={Login} />\n        <Route exact path={register} component={Register} />\n        <Route exact path={profile} component={Profile} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\n\ndocument.title = \"Blog Reader\";\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}